name: Create Release
on:
  workflow_dispatch:
  push:

defaults:
  run:
    shell: bash

jobs:
  bosh_release_create_candidate:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/${{ github.actor }}/bosh-package-cf-cli-release-ci:187042013-release-workflow-latest"

    steps:
    - name: Checkout cli bosh release repo
      uses: actions/checkout@v4

    - name: Acquire latest CF CLI binaries
      run: |
        ./ci/scripts/download-cf-cli-binary.sh --major-version 7 --output-dir ./build/cf-cli-binaries
        ./ci/scripts/download-cf-cli-binary.sh --major-version 8 --output-dir ./build/cf-cli-binaries

    - name: Compare latest CF CLI binaries against latest published BOSH release
      id: compare-manifest-against-binaries
      run: |
        ./ci/scripts/compare-against-published-bosh-release.sh --downloaded-binaries-dir ./build/cf-cli-binaries >> $GITHUB_OUTPUT

    - name: Create bosh release candidate
      if: steps.compare-manifest-against-binaries.outputs.blobs_updated == 'true'
      run: |
        ./ci/scripts/create-bosh-release-candidate.sh --downloaded-binaries-dir ./build/cf-cli-binaries

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.ref }}

    ## Claim Shepherd env
    ## Deploy cli bosh release candidate
    ## Unclaim shepherd env


    # ## Finalize bosh release
    # ##   Get final release from assets
    # ## Push commit with final release
    # - name: Finalize bosh release
    #   if: steps.create-bosh-release-candidate-step.outputs.blobs_updated == 'yes'
    #   # env:
    #   #   TRACE: ${{ runner.debug }}
    #   # S3 final release config to upload
    #   # ACCESS_KEY_ID:
    #   # SECRET_KEY:
    #   run: |
    #     set -o errexit -o nounset -o pipefail
    #     [[ "${TRACE:-0}" == "1" ]] && set -o xtrace

    #     # if [[ "${{ steps.create-bosh-release-candidate-step.outputs.blobs_updated }}" == "yes" ]]; then
        
    #     # echo "Bosh Blobs: initial state"
    #     # bosh blobs

    #     ## Determine next release version number

    #     # RELEASE_VERSION=$(cat release-version/version)
    #     # git config --global --add safe.directory "$(pwd)"
    #     # git config user.name  "github-actions[bot]"
    #     # git config user.email "41898282+github-actions[bot]@users.noreply.github.com "

    #     # bosh create-release --final --version="${RELEASE_VERSION}" --tarball="./cf-cli-v${RELEASE_VERSION}.tgz"

    #     # git add --all
    #     # git status
    #     # git commit -m "create final release ${RELEASE_VERSION}"

    #     ls -lah ./candidate-release-output/cf-cli-dev-release.tgz

    - name: Setup tmate session
      if: ${{ always() && runner.debug }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 15
